rm(checklists.2007,checklists.2007.CA,checklists.2007.US)
#2006
start.time <- Sys.time()
checklists.2006 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2006.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #15.77527 secs
checklists.2006.US <- checklists.2006 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2006.CA <- checklists.2006 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2006.US.CA <- bind_rows(checklists.2006.US, checklists.2006.CA)
#Remove intermediates
rm(checklists.2006,checklists.2006.CA,checklists.2006.US)
#2005
start.time <- Sys.time()
checklists.2005 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2005.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #8.5831 secs
checklists.2005.US <- checklists.2005 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2005.CA <- checklists.2005 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2005.US.CA <- bind_rows(checklists.2005.US, checklists.2005.CA)
#Remove intermediates
rm(checklists.2005,checklists.2005.CA,checklists.2005.US)
#2004
start.time <- Sys.time()
checklists.2004 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2004.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #6.170227 secs
checklists.2004.US <- checklists.2004 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2004.CA <- checklists.2004 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2004.US.CA <- bind_rows(checklists.2004.US, checklists.2004.CA)
#Remove intermediates
rm(checklists.2004,checklists.2004.CA,checklists.2004.US)
#2003
start.time <- Sys.time()
checklists.2003 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2003.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #7.322242 secs
checklists.2003.US <- checklists.2003 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2003.CA <- checklists.2003 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2003.US.CA <- bind_rows(checklists.2003.US, checklists.2003.CA)
#Remove intermediates
rm(checklists.2003,checklists.2003.CA,checklists.2003.US)
#Bind them all together
checklists.all <- rbind(checklists.2002.US.CA,checklists.2003.US.CA,checklists.2004.US.CA,
checklists.2005.US.CA, checklists.2006.US.CA, checklists.2007.US.CA,
checklists.2008.US.CA, checklists.2009.US.CA, checklists.2010.US.CA,
checklists.2011.US.CA, checklists.2012.US.CA, checklists.2013.US.CA,
checklists.2014.US.CA, checklists.2015.US.CA, checklists.2016.US.CA)
rm(checklists.2002.US.CA,checklists.2003.US.CA,checklists.2004.US.CA,
checklists.2005.US.CA, checklists.2006.US.CA, checklists.2007.US.CA,
checklists.2008.US.CA, checklists.2009.US.CA, checklists.2010.US.CA,
checklists.2011.US.CA, checklists.2012.US.CA, checklists.2013.US.CA,
checklists.2014.US.CA, checklists.2015.US.CA, checklists.2016.US.CA)
rm(end.time, start.time, time.taken)
#Create binary P/A variable
checklists.all$FOSPp <- checklists.all$Passerella_iliaca
checklists.all$FOSPp[checklists.all$FOSPp>0] <- 1
checklists.all$FOSPp <- as.numeric(checklists.all$FOSPp)
checklists.all$BITHp <- checklists.all$Catharus_bicknelli
checklists.all$BITHp[checklists.all$BITHp>0] <- 1
checklists.all$BITHp <- as.numeric(checklists.all$BITHp)
checklists.all$BLPWp <- checklists.all$Setophaga_striata
checklists.all$BLPWp[checklists.all$BLPWp>0] <- 1
checklists.all$BLPWp <- as.numeric(checklists.all$BLPWp)
checklists.all$PRIMARY_CHECKLIST_FLAG <- as.factor(checklists.all$PRIMARY_CHECKLIST_FLAG)
checklists.all$COUNT_TYPE <- as.factor(checklists.all$COUNT_TYPE)
checklists.all$COUNT_TYPE <- as.factor(checklists.all$COUNT_TYPE)
checklists.all <- checklists.all %>%
filter(COUNT_TYPE %in% c("P62","P22","P23","P48", "P21")) %>%
droplevels()
## Now split out the duplicate records generated by the group checklist option.
first.checklists <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == "1")
second.checklists <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == "?")
second.checklists <-
second.checklists %>%
group_by(GROUP_ID) %>%
summarize(FOSPmax = max(FOSPp))
## Join the two lists.
joined.checklist <- inner_join(second.checklists,first.checklists, by = "GROUP_ID")
## Calculate a difference between the maximum FOSP count (1 = present, 0 = absent) from
## the secondary checklists in the group and the maximum FOSP count from the primary checklist.
joined.checklist <- joined.checklist %>%
mutate(difference = FOSPmax - FOSPp)
summary(joined.checklist$difference)
rm(first.checklists,second.checklists,joined.checklist)
checklists.unique <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == 1)
checklists.unique$year.factor <- as.factor(checklists.unique$YEAR)
write.csv(checklists.unique, file = "uniqueChecklists.csv")
checklists.unique %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
checklists.unique %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1991) %>%
group_by(YEAR) %>%
summarize(n = n())
props <- checklists.unique %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
write.csv(checklists.unique, file = "uniqueChecklists.csv")
read.csv
uniqueChecklistsGridded <- read.csv(file = "uniqueChecklistsGridded.csv")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
library(dplyr)
library(tidyr)
library(ggplot2)
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded <- read.csv(file = "uniqueChecklistsGridded.csv")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1991) %>%
group_by(YEAR) %>%
summarize(n = n())
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n())
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States" & YEAR >2002) %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
2/67
View(uniqueChecklistsGridded)
1/21
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor, grid.id) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of grids with lists") + labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR, grid.id) %>%
summarize(n = n())
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))%>%
options(tibble.print_max = Inf)
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))%>%
View()
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n_distinct(grid.id)) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of grids with lists") + labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "Canada") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "Canada") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "eastern Canada")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BITHp = max(BITHp)) %>%
group_by(YEAR, BITHp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BITH") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BITHp = max(BITHp)) %>%
group_by(YEAR, BITHp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(BITHp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BITH") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BLPWp = max(BLPWp)) %>%
group_by(YEAR, BLPWp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(BLPWp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BLPW") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,FOSPp) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp), effort = sum(EFFORT_HRS)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp), effort = sum(EFFORT_HRS)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(effort))
View(props)
props <- props %>%
mutate(success = ifelse(FOSPp == 1,n,0))
props <- props %>%
mutate(failures = ifelse(FOSPp == 0,n,0))
props <- props %>%
group_by(YEAR) %>%
summarize(success = max(success), failures = max(failures),
effort = sum(effort)) %>%
mutate(proportion = success/(success+failures))
View(props)
props.long <- gather(props, outcome, number, success:failures, factor_key = TRUE)
ggplot(data = props.long, aes(x = YEAR, y = number)) + geom_bar(aes(fill = outcome), position = "dodge",
stat = "identity")
ggplot(data = props.long, aes(x = YEAR, y = number)) + geom_bar(aes(fill = outcome), position = "dodge",
stat = "identity") +
xlab("Year") + ylab("Number of grids") +
labs(title = "eBird checklists with and without FOSP",
subtitle = "northern and western counties of Maine & NH")
y <- cbind(props$success,props$failures)
FOSP.m1 <- glm(y ~ props$YEAR + props$effort, family = binomial)
summary(FOSP.m1)
FOSP.m2 <- glm(y ~ props$YEAR, family = binomial)
summary(FOSP.m2)
anova(FOSP.m1,FOSP.m2)
mod.comp <- anova(FOSP.m1,FOSP.m2)
summary(mod.comp)
anova(FOSP.m1,FOSP.m2)
FOSP.m3 <- glm(y ~ 1, family = binomial)
anova(FOSP.m1,FOSP.m2, FOSP.m3)
anova(FOSP.m3,FOSP.m2, FOSP.m1)
anova(FOSP.m3,FOSP.m2, FOSP.m1, test = "Chisq")
anova(FOSP.m2, FOSP.m1, test = "Chisq")
anova(FOSP.m1, FOSP.m2, test = "Chisq")
xyear <- seq(from = 2003, to = 2016, by = 1)
newdata <- data.frame(YEAR = seq(from = 1998, to = 2016, by = 1), effort = rep(1000,19))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 1), effort = rep(1000,19))
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 1), effort = rep(1000,14))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
y
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2002) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp), effort = sum(EFFORT_HRS)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(effort))
props <- props %>%
mutate(success = ifelse(FOSPp == 1,n,0))
props <- props %>%
mutate(failures = ifelse(FOSPp == 0,n,0))
props <- props %>%
group_by(YEAR) %>%
summarize(success = max(success), failures = max(failures),
effort = sum(effort)) %>%
mutate(proportion = success/(success+failures))
#Make a long version for plotting in ggplot
props.long <- gather(props, outcome, number, success:failures, factor_key = TRUE)
ggplot(data = props.long, aes(x = YEAR, y = number)) + geom_bar(aes(fill = outcome), position = "dodge",
stat = "identity") +
xlab("Year") + ylab("Number of grids") +
labs(title = "eBird checklists with and without FOSP",
subtitle = "northern and western counties of Maine & NH")
y <- cbind(props$success,props$failures)
FOSP.m1 <- glm(y ~ props$YEAR + props$effort, family = binomial)
summary(FOSP.m1)
FOSP.m2 <- glm(y ~ props$YEAR, family = binomial)
summary(FOSP.m2)
anova(FOSP.m1, FOSP.m2, test = "Chisq")
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 1), effort = rep(1000,14))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
plot(x = newdata$YEAR, y = props$proportion, ylab = "Proportion of checklists reporting Fox Sparrow",
pch = 16, col = "blue", lwd = 2)
lines(newdata$YEAR, yvals$fit, col = "red", lwd = 2)
yvals$upperci <- yvals$fit + yvals$se.fit*yvals$fit
yvals$lowerci <- yvals$fit - yvals$se.fit*yvals$fit
lines(newdata$YEAR, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvals$upperci, col = "red", lwd = 2, lty = 3)
View(y)
library(effects)
install.packages("effects")
library(effects)
effect(term = "YEAR", mod = FOSP.m2, xlevels = 13)
effect(mod = FOSP.m2)
Effect(mod = FOSP.m2)
Effect(focal.predictors = "YEAR", mod = FOSP.m2)
View(newdata)
yvals$upperci <- yvals$fit + yvals$se.fit*2
yvals$lowerci <- yvals$fit - yvals$se.fit*2
plot(x = newdata$YEAR, y = props$proportion, ylab = "Proportion of checklists reporting Fox Sparrow",
pch = 16, col = "blue", lwd = 2)
lines(newdata$YEAR, yvals$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvals$upperci, col = "red", lwd = 2, lty = 3)
