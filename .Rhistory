<<<<<<< HEAD
#2006
start.time <- Sys.time()
checklists.2006 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2006.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #15.77527 secs
checklists.2006.US <- checklists.2006 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2006.CA <- checklists.2006 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2006.US.CA <- bind_rows(checklists.2006.US, checklists.2006.CA)
#Remove intermediates
rm(checklists.2006,checklists.2006.CA,checklists.2006.US)
#2005
start.time <- Sys.time()
checklists.2005 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2005.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #8.5831 secs
checklists.2005.US <- checklists.2005 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2005.CA <- checklists.2005 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2005.US.CA <- bind_rows(checklists.2005.US, checklists.2005.CA)
#Remove intermediates
rm(checklists.2005,checklists.2005.CA,checklists.2005.US)
#2004
start.time <- Sys.time()
checklists.2004 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2004.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #6.170227 secs
checklists.2004.US <- checklists.2004 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2004.CA <- checklists.2004 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2004.US.CA <- bind_rows(checklists.2004.US, checklists.2004.CA)
#Remove intermediates
rm(checklists.2004,checklists.2004.CA,checklists.2004.US)
#2003
start.time <- Sys.time()
checklists.2003 <- fread("/Users/johnlloyd/eBirdComplete/Checklists2003.csv",
sep = ",", select = c(1:19, 2960, 3884, 754))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken #7.322242 secs
checklists.2003.US <- checklists.2003 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "Maine"|STATE_PROVINCE == "New Hampshire") %>%
filter(COUNTY == "Aroostook"|COUNTY == "Penobscot"|COUNTY == "Piscataquis"|COUNTY == "Somerset"|
COUNTY == "Franklin"|COUNTY == "Oxford"|COUNTY == "Coos"|COUNTY == "Grafton") %>%
filter(MONTH == 6|MONTH == 7)
#Filter out Canada records of interest
checklists.2003.CA <- checklists.2003 %>%
#filter(Passerella_iliaca > 0) %>%
filter(STATE_PROVINCE == "New Brunswick"|STATE_PROVINCE == "Nova Scotia"|STATE_PROVINCE == "Quebec")%>%
filter(MONTH == 6|MONTH == 7)
#Bind into a single data frame
checklists.2003.US.CA <- bind_rows(checklists.2003.US, checklists.2003.CA)
#Remove intermediates
rm(checklists.2003,checklists.2003.CA,checklists.2003.US)
#Bind them all together
checklists.all <- rbind(checklists.2002.US.CA,checklists.2003.US.CA,checklists.2004.US.CA,
checklists.2005.US.CA, checklists.2006.US.CA, checklists.2007.US.CA,
checklists.2008.US.CA, checklists.2009.US.CA, checklists.2010.US.CA,
checklists.2011.US.CA, checklists.2012.US.CA, checklists.2013.US.CA,
checklists.2014.US.CA, checklists.2015.US.CA, checklists.2016.US.CA)
rm(checklists.2002.US.CA,checklists.2003.US.CA,checklists.2004.US.CA,
checklists.2005.US.CA, checklists.2006.US.CA, checklists.2007.US.CA,
checklists.2008.US.CA, checklists.2009.US.CA, checklists.2010.US.CA,
checklists.2011.US.CA, checklists.2012.US.CA, checklists.2013.US.CA,
checklists.2014.US.CA, checklists.2015.US.CA, checklists.2016.US.CA)
rm(end.time, start.time, time.taken)
#Create binary P/A variable
checklists.all$FOSPp <- checklists.all$Passerella_iliaca
checklists.all$FOSPp[checklists.all$FOSPp>0] <- 1
checklists.all$FOSPp <- as.numeric(checklists.all$FOSPp)
checklists.all$BITHp <- checklists.all$Catharus_bicknelli
checklists.all$BITHp[checklists.all$BITHp>0] <- 1
checklists.all$BITHp <- as.numeric(checklists.all$BITHp)
checklists.all$BLPWp <- checklists.all$Setophaga_striata
checklists.all$BLPWp[checklists.all$BLPWp>0] <- 1
checklists.all$BLPWp <- as.numeric(checklists.all$BLPWp)
checklists.all$PRIMARY_CHECKLIST_FLAG <- as.factor(checklists.all$PRIMARY_CHECKLIST_FLAG)
checklists.all$COUNT_TYPE <- as.factor(checklists.all$COUNT_TYPE)
checklists.all$COUNT_TYPE <- as.factor(checklists.all$COUNT_TYPE)
checklists.all <- checklists.all %>%
filter(COUNT_TYPE %in% c("P62","P22","P23","P48", "P21")) %>%
droplevels()
## Now split out the duplicate records generated by the group checklist option.
first.checklists <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == "1")
second.checklists <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == "?")
second.checklists <-
second.checklists %>%
group_by(GROUP_ID) %>%
summarize(FOSPmax = max(FOSPp))
## Join the two lists.
joined.checklist <- inner_join(second.checklists,first.checklists, by = "GROUP_ID")
## Calculate a difference between the maximum FOSP count (1 = present, 0 = absent) from
## the secondary checklists in the group and the maximum FOSP count from the primary checklist.
joined.checklist <- joined.checklist %>%
mutate(difference = FOSPmax - FOSPp)
summary(joined.checklist$difference)
rm(first.checklists,second.checklists,joined.checklist)
checklists.unique <- checklists.all %>%
filter(PRIMARY_CHECKLIST_FLAG == 1)
checklists.unique$year.factor <- as.factor(checklists.unique$YEAR)
write.csv(checklists.unique, file = "uniqueChecklists.csv")
checklists.unique %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
checklists.unique %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1991) %>%
group_by(YEAR) %>%
summarize(n = n())
props <- checklists.unique %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
write.csv(checklists.unique, file = "uniqueChecklists.csv")
read.csv
uniqueChecklistsGridded <- read.csv(file = "uniqueChecklistsGridded.csv")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
library(dplyr)
library(tidyr)
library(ggplot2)
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded <- read.csv(file = "uniqueChecklistsGridded.csv")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of checklists") + labs(title = "Number of eBird checklists submitted annually",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1991) %>%
group_by(YEAR) %>%
summarize(n = n())
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n())
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States" & YEAR >2002) %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
2/67
View(uniqueChecklistsGridded)
1/21
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor, grid.id) %>%
summarize(n = n()) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of grids with lists") + labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR, grid.id) %>%
summarize(n = n())
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))%>%
options(tibble.print_max = Inf)
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 1990) %>%
group_by(YEAR) %>%
summarize(n = n_distinct(grid.id))%>%
View()
uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(year.factor) %>%
summarize(n = n_distinct(grid.id)) %>%
ggplot(.,aes(year.factor,n)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 270,
vjust = 0.5,
size = 8)) +
xlab("Year") + ylab("Number of grids with lists") + labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "Canada") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point()
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "Canada") %>%
group_by(YEAR, grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with lists") +
labs(title = "Number of grids with eBird checklists",
subtitle = "eastern Canada")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BITHp = max(BITHp)) %>%
group_by(YEAR, BITHp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(FOSPp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BITH") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BITHp = max(BITHp)) %>%
group_by(YEAR, BITHp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(BITHp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BITH") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
group_by(YEAR, grid.id) %>%
summarize(BLPWp = max(BLPWp)) %>%
group_by(YEAR, BLPWp)%>%
summarize(n = n()) %>%
mutate(prop = n/sum(n)) %>%
filter(BLPWp == 0) %>%
mutate(prop = 1-prop)
ggplot(data = props, aes(x = YEAR, y = prop)) + geom_point() +
xlab("Year") + ylab("Proportion of grids with BLPW") +
labs(title = "Number of grids with eBird checklists",
subtitle = "northern and western counties of Maine & NH")
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,FOSPp) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp))
View(props)
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp), effort = sum(EFFORT_HRS)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(EFFORT_HRS))
props <- uniqueChecklistsGridded %>%
filter(COUNTRY == "United States") %>%
filter(YEAR > 2003) %>%
group_by(YEAR,grid.id) %>%
summarize(FOSPp = max(FOSPp), effort = sum(EFFORT_HRS)) %>%
group_by(YEAR, FOSPp) %>%
summarize(n = n_distinct(grid.id), effort = sum(effort))
View(props)
props <- props %>%
mutate(success = ifelse(FOSPp == 1,n,0))
props <- props %>%
mutate(failures = ifelse(FOSPp == 0,n,0))
props <- props %>%
group_by(YEAR) %>%
summarize(success = max(success), failures = max(failures),
effort = sum(effort)) %>%
mutate(proportion = success/(success+failures))
View(props)
props.long <- gather(props, outcome, number, success:failures, factor_key = TRUE)
ggplot(data = props.long, aes(x = YEAR, y = number)) + geom_bar(aes(fill = outcome), position = "dodge",
stat = "identity")
ggplot(data = props.long, aes(x = YEAR, y = number)) + geom_bar(aes(fill = outcome), position = "dodge",
stat = "identity") +
xlab("Year") + ylab("Number of grids") +
labs(title = "eBird checklists with and without FOSP",
subtitle = "northern and western counties of Maine & NH")
y <- cbind(props$success,props$failures)
FOSP.m1 <- glm(y ~ props$YEAR + props$effort, family = binomial)
summary(FOSP.m1)
=======
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
View(yvalsBlpw)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
par(opar)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
yvalsBlpw$upperci
yvalsBlpw$lowerci
View(yvalsBlpw)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m3, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
rm(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m3, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- round(yvalsBlpw$fit + yvalsBlpw$se.fit*2)
yvalsBlpw$lowerci <- round(yvalsBlpw$fit - yvalsBlpw$se.fit*2)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m3, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- round(yvalsBlpw$fit + yvalsBlpw$se.fit*2)
yvalsBlpw$lowerci <- round(yvalsBlpw$fit - yvalsBlpw$se.fit*2)
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
View(yvalsBlpw)
rm(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m3, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
View(yvalsBlpw)
par(mar = c(5.1,5.1,4.1,2.1))
par(mfrow = c(3,1))
plot(x = newdata$YEAR, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvals$fit, col = "blue", lwd = 2)
lines(newdata$YEAR, yvals$lowerci, col = "blue", lwd = 2, lty = 3)
lines(newdata$YEAR, yvals$upperci, col = "blue", lwd = 2, lty = 3)
### Bicknell's Thrush:
plot(x = newdata$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "red", lwd = 2)
#### add the fitted line
lines(newdata$YEAR, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
### Blackpoll Warbler
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
##### add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
par(mar = c(5.1,5.1,4.1,2.1))
par(mfrow = c(3,1))
plot(x = newdata$YEAR, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvals$fit, col = "blue", lwd = 2)
lines(newdata$YEAR, yvals$lowerci, col = "blue", lwd = 2, lty = 3)
lines(newdata$YEAR, yvals$upperci, col = "blue", lwd = 2, lty = 3)
### Bicknell's Thrush:
plot(x = newdata$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "red", lwd = 2)
#### add the fitted line
lines(newdata$YEAR, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
### Blackpoll Warbler
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "black", lwd = 2)
##### add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "black", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "black", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "black", lwd = 2, lty = 3)
summary(BLPW.m3)
summary(BLPW.m2)
17.6/12
summary(BITH.m2)
pchisq(summary(BITH.m1)$dispersion * BITH.m1$df.residual,
BITH.m1$df.residual, lower = F)
pchisq(summary(BLPW.m1)$dispersion * BLPW.m1$df.residual,
BLPW.m1$df.residual, lower = F)
pchisq(BLPW.m1$deviance/BLPW.m1$df.residual, lower = F)
# Test for overdispersion:
FOSP.m2 <- glm(y ~ props$YEAR, family = quasibinomial)
summary(FOSP.m2)
>>>>>>> origin/master
FOSP.m2 <- glm(y ~ props$YEAR, family = binomial)
summary(FOSP.m2)
BITH.m2 <- glm(yB ~ propsBith$YEAR, family = quasibinomial)
summary(BITH.m2)
BITH.m2 <- glm(yB ~ propsBith$YEAR, family = binomial)
summary(BITH.m2)
19.698/12
# predict values of y from xv and m2
yvalsBith <- predict(BITH.m2, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBith$upperci <- yvalsBith$fit + yvalsBith$se.fit*2
yvalsBith$lowerci <- yvalsBith$fit - yvalsBith$se.fit*2
opar <- par()
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
dev.off()
plot(x = newdata$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
confint(BITH.m2)
summary(BLPW.m2)
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = quasibinomial)
summary(BLPW.m1)
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = binomial)
summary(BLPW.m1)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
#Model incidence ~ time
yBl <- cbind(propsBlpw$success,propsBlpw$failures)
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = binomial)
summary(BLPW.m1)
BLPW.m2 <- glm(yBl ~ propsBlpw$YEAR, family = binomial)
summary(BLPW.m2)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
newdata
View(yvalsBlpw)
rm(vyalsBlpw)
rm(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
View(yvalsBlpw)
View(yvalsBlpw)
View(yvalsBlpw)
rm(yvalsBlpw)
summary(BLPW.m1)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yBl <- cbind(propsBlpw$success,propsBlpw$failures)
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = binomial)
summary(BLPW.m1)
BLPW.m2 <- glm(yBl ~ propsBlpw$YEAR, family = binomial)
summary(BLPW.m2)
BLPW.m3 <- glm(yBl ~ propsBlpw$YEAR + I(propsBlpw$YEAR^2) + propsBlpw$effort, family = binomial)
summary(BLPW.m3)
# The best model is the simpler model, with an effect of Year only:
anova(BLPW.m1, BLPW.m2, BLPW.m3, test = "Chisq")
newdata
str(newdata)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m2, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
summary(BLPW.m1)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
View(yvalsBlpw)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
yvalsBlpw$fit
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
yBl
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = binomial)
summary(BLPW.m1)
BLPW.m2 <- glm(yBl ~ propsBlpw$YEAR, family = binomial)
summary(BLPW.m2)
BLPW.m3 <- glm(yBl ~ propsBlpw$YEAR + I(propsBlpw$YEAR^2) + propsBlpw$effort, family = binomial)
summary(BLPW.m3)
# The best model is the simpler model, with an effect of Year only:
anova(BLPW.m1, BLPW.m2, BLPW.m3, test = "Chisq")
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "link",se.fit = TRUE)
View(yvalsBlpw)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
dev.off()
lines(newdata$YEAR, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
exp(yvalsBlpw$fit)/(1+exp(yvalsBlpw$fit))
newdata
# predict values of y from xv and m2
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 1), effort = rep(1000,14))
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "link",se.fit = TRUE)
exp(yvalsBlpw$fit)/(1+exp(yvalsBlpw$fit))
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
View(yvalsBlpw)
View(yvalsBlpw)
YEAR = seq(from = 2003, to = 2016, by = 0.01)
YEAR
str(YEAR)
# predict values of y from xv and m2
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 0.01), effort = rep(1000,1301))
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
BLPW.m1 <- glm(yBl ~ propsBlpw$YEAR + propsBlpw$effort, family = binomial)
summary(BLPW.m1)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m1, newdata = newdata, type = "response",se.fit = TRUE)
newdata
# predict values of y from xv and m2
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 0.01), effort = rep(1000,1301))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
str(newdata)
View(newdata)
y
data.frame()
FOSP.df <- data.frame(success = props$success), "failure" = props$failures,
"year" = props$YEAR, "effort" = props$effort)
FOSP.df <- data.frame(success = props$success)
View(FOSP.df)
FOSP.df <- data.frame(success = props$success, failure = props$failures,
year = props$YEAR, effort = props$effort)
FOSP.test <- glm(cbind(success,failure) ~ year + effort, family = binomial, data = FOSP.df)
summary(FOSP.test)
summary(FOSP.m1)
rm(FOSP.df)
rm(y)
FOSP.m1 <- glm(cbind(success,failure) ~ year + effort, family = binomial, data = FOSP.df)
summary(FOSP.m1)
FOSP.m2 <- glm(cbind(success,failure) ~ year, family = binomial, data = FOSP.df)
summary(FOSP.m2)
# The best model is the simpler model, with an effect of Year only:
anova(FOSP.m1, FOSP.m2, test = "Chisq")
# predict values of y from xv and m2
newdata <- data.frame(YEAR = seq(from = 2003, to = 2016, by = 0.01), effort = rep(1000,1301))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
# predict values of y from xv and m2
newdata <- data.frame(year = seq(from = 2003, to = 2016, by = 0.01), effort = rep(1000,1301))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
newdata
summary(FOSP.m2)
FOSP.m2 <- glm(cbind(success,failure) ~ year, family = binomial, data = FOSP.df)
summary(FOSP.m2)
FOSP.df <- data.frame(success = props$success, failure = props$failures,
year = props$YEAR, effort = props$effort)
FOSP.m1 <- glm(cbind(success,failure) ~ year + effort, family = binomial, data = FOSP.df)
summary(FOSP.m1)
FOSP.m2 <- glm(cbind(success,failure) ~ year, family = binomial, data = FOSP.df)
summary(FOSP.m2)
summary(FOSP.m2)
# predict values of y from xv and m2
newdata <- data.frame(year = seq(from = 2003, to = 2016, by = 0.01), effort = rep(1000,1301))
yvals <- predict(FOSP.m2, newdata = newdata, type = "response",se.fit = TRUE)
yvals$upperci <- yvals$fit + yvals$se.fit*2
yvals$lowerci <- yvals$fit - yvals$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$year, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
plot(x = props$year, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
View(props)
plot(x = props$YEAR, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$YEAR, yvals$fit, col = "red", lwd = 2)
lines(newdata$YEAR, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$YEAR, yvals$upperci, col = "red", lwd = 2, lty = 3)
<<<<<<< HEAD
getwd()
=======
# add the fitted line
lines(newdata$year, yvals$fit, col = "red", lwd = 2)
lines(newdata$year, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvals$upperci, col = "red", lwd = 2, lty = 3)
BITH.df <- data.frame(success = propsBith$success, failure = propsBith$failures,
year = propsBith$YEAR, effort = propsBith$effort)
BITH.m1 <- glm(cbind(success,failure) ~ year + effort, family = binomial, data = BITH.df)
summary(BITH.m1)
BITH.m2 <- glm(cbind(success,failure) ~ year, family = binomial, data = BITH.df)
summary(BITH.m2)
BITH.m2OD <- glm(cbind(success,failure) ~ year, family = quasibinomial, data = BITH.df)
summary(BITH.m2OD)
# predict values of y from xv and m2
yvalsBith <- predict(BITH.m2OD, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBith$upperci <- yvalsBith$fit + yvalsBith$se.fit*2
yvalsBith$lowerci <- yvalsBith$fit - yvalsBith$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = propsBith$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$year, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
BLPW.df <- data.frame(success = propsBlpw$success, failure = propsBlpw$failures,
year = propsBlpw$YEAR, effort = propsBlpw$effort)
BLPW.m1 <- glm(cbind(success,failure) ~ year + effort, family = binomial, data = BLPW.df)
summary(BLPW.m1)
BLPW.m2 <- glm(cbind(success,failure) ~ year, family = binomial, data = BLPW.df)
summary(BLPW.m2)
BLPW.m3 <- glm(cbind(success,failure) ~ year + I(year^2) + effort, family = binomial, data = BLPW.df)
summary(BLPW.m3)
# The best model is the simpler model, with an effect of Year only:
anova(BLPW.m1, BLPW.m2, BLPW.m3, test = "Chisq")
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m3, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = newdata$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
plot(x = propsBlpw$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$year, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
View(yvalsBlpw)
# predict values of y from xv and m2
yvalsBlpw <- predict(BLPW.m2, newdata = newdata, type = "response",se.fit = TRUE)
yvalsBlpw$upperci <- yvalsBlpw$fit + yvalsBlpw$se.fit*2
yvalsBlpw$lowerci <- yvalsBlpw$fit - yvalsBlpw$se.fit*2
par(mar = c(5.1,5.1,4.1,2.1))
plot(x = propsBlpw$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$year, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
par(mar = c(5.1,5.1,4.1,2.1))
par(mfrow = c(2,2))
plot(x = props$YEAR, y = props$proportion, ylab = "Proportion of checklists\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvals$fit, col = "red", lwd = 2)
lines(newdata$year, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvals$upperci, col = "red", lwd = 2, lty = 3)
### Bicknell's Thrush:
plot(x = propsBith$YEAR, y = propsBith$proportion, ylab = "Proportion of checklists\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBith$fit, col = "red", lwd = 2)
lines(newdata$year, yvalsBith$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvalsBith$upperci, col = "red", lwd = 2, lty = 3)
### Blackpoll Warbler
plot(x = propsBlpw$YEAR, y = propsBlpw$proportion, ylab = "Proportion of checklists\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBlpw$fit, col = "red", lwd = 2)
lines(newdata$year, yvalsBlpw$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvalsBlpw$upperci, col = "red", lwd = 2, lty = 3)
par(mar = c(5.1,5.1,4.1,2.1))
par(mfrow = c(2,2))
plot(x = props$YEAR, y = props$proportion, ylab = "Proportion of cells\nreporting Fox Sparrow",
xlab = "Year",
pch = 16, col = "red", lwd = 2)
# add the fitted line
lines(newdata$year, yvals$fit, col = "red", lwd = 2)
lines(newdata$year, yvals$lowerci, col = "red", lwd = 2, lty = 3)
lines(newdata$year, yvals$upperci, col = "red", lwd = 2, lty = 3)
### Bicknell's Thrush:
plot(x = propsBith$YEAR, y = propsBith$proportion, ylab = "Proportion of cells\nreporting Bicknell's Thrush",
xlab = "Year",
pch = 16, col = "blue", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBith$fit, col = "blue", lwd = 2)
lines(newdata$year, yvalsBith$lowerci, col = "blue", lwd = 2, lty = 3)
lines(newdata$year, yvalsBith$upperci, col = "blue", lwd = 2, lty = 3)
### Blackpoll Warbler
plot(x = propsBlpw$YEAR, y = propsBlpw$proportion, ylab = "Proportion of cells\nreporting Blackpoll Warbler",
xlab = "Year",
pch = 16, col = "black", lwd = 2)
# add the fitted line
lines(newdata$year, yvalsBlpw$fit, col = "black", lwd = 2)
lines(newdata$year, yvalsBlpw$lowerci, col = "black", lwd = 2, lty = 3)
lines(newdata$year, yvalsBlpw$upperci, col = "black", lwd = 2, lty = 3)
confint(FOSP.m1)
confint(FOSP.m2)
coef(FOSP.m2)
exp(0.097)/(1+exp(0.097))
View(yvals)
View(yvals)
predict(FOSP.m1,newdata = data.frame(year = 2003),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2003),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2004),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2005),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2005),type = "response")/0.00963655
0.00963655/0.0115372
predict(FOSP.m2,newdata = data.frame(year = 2003),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2004),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2005),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2006),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2007),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2008),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2009),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2010),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2011),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2012),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2013),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2014),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2015),type = "response")
predict(FOSP.m2,newdata = data.frame(year = 2016),type = "response")
confint(FOSP.m2)
coef(FOSP.m2)
coef(BITH.m2)
confint(BITH.m2)
coef(BLPW.m1)
confint(BLPW.m1)
predict(BLPW.m1,newdata = data.frame(year = 2016, effort = 1000))
predict(BLPW.m1,newdata = data.frame(year = 2016, effort = 1000), type = "response")
predict(BLPW.m1,newdata = data.frame(year = 2015, effort = 1000), type = "response")
predict(BLPW.m1,newdata = data.frame(year = 2003, effort = 1000), type = "response")
0.102776/0.4245277
0.42/0.10
0.42*0.8
0.42*0.2
0.14^14
>>>>>>> origin/master
